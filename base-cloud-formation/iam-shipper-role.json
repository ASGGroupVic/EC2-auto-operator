{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Assumable Role for deployment used by residata-shipper",
  "Parameters": {
    "s3resourcelist": {
      "Description":"list of resources allows s3 permission",
      "Type": "CommaDelimitedList"
    },
    "principalList": {
      "Description":"list of principals",
      "Type": "CommaDelimitedList"
    }
  },
  "Resources": {
    "Shipper": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "Path": "/",
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "AWS": {"Ref":"principalList"},
                "Service":[
                  "ec2.amazonaws.com"
                ]
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "ShipperPolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Action": [
                    "autoscaling:CreateAutoScalingGroup",
                    "autoscaling:CreateLaunchConfiguration",
                    "autoscaling:DeleteAutoScalingGroup",
                    "autoscaling:DeleteLaunchConfiguration",
                    "autoscaling:DeletePolicy",
                    "autoscaling:DescribeAutoScalingGroups",
                    "autoscaling:DescribeAutoScalingInstances",
                    "autoscaling:DescribeLaunchConfigurations",
                    "autoscaling:DescribePolicies",
                    "autoscaling:DescribeScalingActivities",
                    "autoscaling:DescribeScheduledActions",
                    "autoscaling:DescribeTags",
                    "autoscaling:ResumeProcesses",
                    "autoscaling:PutNotificationConfiguration",
                    "autoscaling:PutScalingPolicy",
                    "autoscaling:PutScheduledUpdateGroupAction",
                    "autoscaling:SetDesiredCapacity",
                    "autoscaling:SuspendProcesses",
                    "autoscaling:TerminateInstanceInAutoScalingGroup",
                    "autoscaling:UpdateAutoScalingGroup",
                    "autoscaling:EnableMetricsCollection",
                    "autoscaling:DisableMetricsCollection",
                    "cloudformation:CreateStack",
                    "cloudformation:DeleteStack",
                    "cloudformation:DescribeStackEvents",
                    "cloudformation:DescribeStackResource",
                    "cloudformation:DescribeStackResources",
                    "cloudformation:DescribeStacks",
                    "cloudformation:GetTemplate",
                    "cloudformation:ListStackResources",
                    "cloudformation:ListStacks",
                    "cloudformation:UpdateStack",
                    "cloudformation:ValidateTemplate",
                    "cloudwatch:PutMetricAlarm",
                    "cloudwatch:DeleteAlarms",
                    "ec2:*ImageAttribute",
                    "ec2:*SecurityGroup*",
                    "ec2:AllocateAddress",
                    "ec2:AssociateAddress",
                    "ec2:AttachVolume",
                    "ec2:AuthorizeSecurityGroupIngress",
                    "ec2:BundleInstance",
                    "ec2:CancelBundleTask",
                    "ec2:CancelConversionTask",
                    "ec2:CancelExportTask",
                    "ec2:CopyImage",
                    "ec2:CopySnapshot",
                    "ec2:CreateImage",
                    "ec2:CreateInstanceExportTask",
                    "ec2:CreateKeyPair",
                    "ec2:CreateSecurityGroup",
                    "ec2:CreateSnapshot",
                    "ec2:CreateTags",
                    "ec2:CreateVolume",
                    "ec2:DeleteKeyPair",
                    "ec2:DeleteSecurityGroup",
                    "ec2:DeleteTags",
                    "ec2:DeleteVolume",
                    "ec2:DeregisterImage",
                    "ec2:Describe*",
                    "ec2:DetachVolume",
                    "ec2:DisassociateAddress",
                    "ec2:ImportInstance",
                    "ec2:ImportVolume",
                    "ec2:RegisterImage",
                    "ec2:RunInstances",
                    "ec2:StartInstances",
                    "ec2:StopInstances",
                    "ec2:TerminateInstances",
                    "elasticloadbalancing:AttachLoadBalancerToSubnets",
                    "elasticloadbalancing:ConfigureHealthCheck",
                    "elasticloadbalancing:CreateLoadBalancer",
                    "elasticloadbalancing:CreateLoadBalancerPolicy",
                    "elasticloadbalancing:DeleteLoadBalancer",
                    "elasticloadbalancing:DeleteLoadBalancerListeners",
                    "elasticloadbalancing:DescribeLoadBalancers",
                    "elasticloadbalancing:ModifyLoadBalancerAttributes",
                    "elasticloadbalancing:SetLoadBalancerPoliciesOfListener",
                    "iam:AddRoleToInstanceProfile",
                    "iam:CreateInstanceProfile",
                    "iam:CreateRole",
                    "iam:CreatePolicy",
                    "iam:AttachUserPolicy",
                    "iam:DetachUserPolicy",
                    "iam:DeletePolicy",
                    "iam:DeleteInstanceProfile",
                    "iam:DeleteRole",
                    "iam:DeleteRolePolicy",
                    "iam:Get*",
                    "iam:List*",
                    "iam:PassRole",
                    "iam:PutRolePolicy",
                    "iam:RemoveRoleFromInstanceProfile",
                    "iam:UpdateAssumeRolePolicy",
                    "kms:Decrypt",
                    "rds:DescribeDBInstances",
                    "rds:DescribeDBParameterGroups",
                    "rds:DescribeDBSecurityGroups",
                    "rds:DescribeDBSnapshots",
                    "rds:DescribeDBSubnetGroups",
                    "rds:DescribeOptionGroups",
                    "route53:ChangeResourceRecordSets",
                    "route53:GetChange",
                    "route53:ListHealthChecks",
                    "route53:ListHostedZones",
                    "sdb:ListDomains",
                    "sts:AssumeRole",
                    "sns:CreateTopic",
                    "sns:DeleteTopic",
                    "sns:ListTopics",
                    "sns:Subscribe",
                    "sns:SetTopicAttributes",
                    "sns:SetEndpointAttributes"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                },
		        {
              	  "Resource": {"Ref":"s3resourcelist"},
              	  "Action": [
                    "s3:List*",
                    "s3:Get*",
                    "s3:PutObject"
                  ],
              	  "Effect": "Allow"
 	            },
                {
                  "Sid": "PackerIAMPassRole",
            	  "Effect": "Allow",
            	  "Action": "iam:PassRole",
            	  "Resource": [
                       "*"
            	  ]
        	    }
              ]
            }
          }
        ]
      }
    }
  },
  "Outputs": {
    "RoleARN": {
      "Value": {
        "Fn::GetAtt": [ "Shipper", "Arn" ]
      }
    }
  }
}
